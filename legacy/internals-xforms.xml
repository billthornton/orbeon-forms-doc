<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Copyright (C) 2004 Orbeon, Inc.

    The Orbeon documentation is not distributed under the LGPL license. Use of the documentation is
    subject to the following terms:

    * Conversion to other formats is allowed, but the actual content may not be altered or edited
      in any way.

    * You may create printed copies for your own personal use.

    * For all other uses, such as selling printed copies or using (parts of) the manual in another
      publication, prior written agreement from Orbeon, Inc. is required.

    Please contact Orbeon at info@orbeon.com for more information.
-->
<document xmlns:p="http://www.orbeon.com/oxf/pipeline">
    <header>
        <title>XForms Internal</title>
    </header>
    <body>
        <section>
            <title>HTTP Parameters</title>
            <p>Currently in use:</p>
            <ul>
                <li>
                    <code>$instance</code> – The instance, serialized as XML, compressed, gzipped,
                    stored in base64.
                </li>
                <li>
                    <code>$node^{id}</code> – Name of the HTML form elements. Form elements are
                    bound to a node in the instance and the end of the name if the node id (e.g.
                    <code>node^42</code>).
                </li>
                <li>
                    <code>$upload^{1}^{2}^{3}^{4}^{5}^{6}^{7}</code> – Where:
                    <ul>
                        <li>{1}: node id for file content</li>
                        <li>{2}: original value</li>
                        <li>{3}: node id for file name</li>
                        <li>{4}: current value of file name</li>
                        <li>{5}: node id for media type</li>
                        <li>{6}: current value for media type</li>
                        <li>{7}: node id for size</li>
                        <li>{8}: current id for size</li>
                    </ul>
                </li>
                <li>
                    <code>$action^...</code> and <code>$actionImg^...</code> – Are used to store the
                    actions to be performed when a submit control is clicked. The value is create in
                    xforms-to-xhtml.xml (look for the xxforms:submit-name function). This value is used
                    as the name of form contro for submit buttons and images. For links, JavaScript is
                    generated to set the value of a hidden field to this value. The hidden field name
                    starts with wsrp_rewrite_action.
                </li>
                <li>
                    All the other parameter names are ignored by the XForms Input processor.
                </li>
            </ul>
            <p>Obsolete:</p>
            <ul>
                <li>
                    <code>$submitted</code> – Was set to 'true' when the form was submitted. When set,
                    the XForms engine did not take into account the instance from the XForms model,
                    but instead recreates the instance entirely from the request. We do not need
                    this anymore as <code>$instance</code> is always going to be set when the
                    instance is submitted.
                </li>
                <li>
                    <code>$hidden</code> – Was used to aggregate store the aggregation of all the
                    hidden variables. This is has been replaced by $instance.
                </li>
                <li>
                    <code>$idRef</code>
                </li>
            </ul>
        </section>
        <section>
            <title>Instance To Parameters Processor</title>
            <p>
                Private processor to generate a URL from an instance. This processor gets used
                internally by the Page Flow Controller when doing a redirect. The content of the 
                nodes referenced from <code>&lt;param ref="..."></code> is not serialized in 
                the URL.
            </p>
            <p>Example usage:</p>
            <xml-source show-namespaces="false">
                <p:processor name="oxf:instance-to-parameters">
                    <p:input name="instance" href="#instance"/>
                    <p:input name="filter">
                        <params>
                            <param ref="/instance/department"/>
                            <param ref="/instance/employee"/>
                        </params>
                    </p:input>
                    <p:output name="data" id="parameters"/>
                </p:processor>
            </xml-source>
            <p>Example output:</p>
            <xml-source>
                <parameters>
                    <parameter>
                        <name>department</name>
                        <value>hr</value>
                    </parameter>
                    <parameter>
                        <name>$instance</name>
                        <value>...</value>
                    </parameter>
                </parameters>
            </xml-source>
        </section> 
        <section>
            <title>Params Declared in the Page Flow Controller</title>
            <p>
                When a <code>&lt;p:param ref="..."></code> is declared in the page flow controller
                for a given page, it means that the content of the referenced node of the instance
                is on the path part of the URL. Let's consider this page, which displays the
                detailed information about a product with the product stored in the URL:
            </p>
            <xml-source>
                <page id="view-product" path-info="/view-product/(.*)" matcher="oxf:perl5-matcher">
                    <param ref="/instance/product-id"/>
                </page>
            </xml-source>
            <p>
                To handle this case we need:
            </p>
            <ol>
                <li>
                    <code>XFormsInput</code> – When a request is received, extract the relevant
                    section of the URL and populate the instance. If a preexisting instance is
                    passed through the <code>$instance</code> parameter, update that instance. This
                    happens before model item properties are evaluated on the instance.
                </li>
                <li>
                    <code>InstanceToParametersProcessor</code> – When doing a redirect to another
                    page, if all the nodes in the instance are referenced are stored in the URL, we
                    don't need include the <code>$instance</code> parameter. This makes the URL less
                    cluttered.
                </li>
            </ol>
        </section>
    </body>
</document>
